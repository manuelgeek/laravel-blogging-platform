version: '3'
services:

    #PHP Service
    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: digitalocean.com/php
        container_name: web_blogging_platform
        restart: unless-stopped
        tty: true
        environment:
            SERVICE_NAME: app
            SERVICE_TAGS: dev
            CONTAINER_ROLE: app
            DB_HOST: db
        working_dir: /var/www
        volumes:
            - ./:/var/www
            - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
        depends_on:
            - db
            - redis
        links:
            - db
        networks:
            - app-network

    #Nginx Service
    webserver:
        image: nginx:alpine
        container_name: webserver
        restart: unless-stopped
        tty: true
        ports:
            - "8000:80"
#            - "4431:443"
        volumes:
            - ./:/var/www
            - ./nginx/conf.d/:/etc/nginx/conf.d/
        networks:
            - app-network

    #MySQL Service
    db:
        image: mariadb:10.5.8
        container_name: db
        restart: unless-stopped
        command: --default-authentication-plugin=mysql_native_password
        tty: true
        ports:
            - "3306:3306"
        environment:
            MYSQL_DATABASE: web_blogging_platform
            MYSQL_USER: root
            MYSQL_ROOT_PASSWORD: password
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - dbdata:/var/lib/mysql/
            - ./mysql/my.cnf:/etc/mysql/my.cnf
        networks:
            - app-network

    redis:
        container_name: laravel-redis
        image: redis:4-alpine
        ports:
            - "6379:6379"
        volumes:
            - redis:/data
        networks:
            - app-network

    scheduler:
        image: digitalocean.com/php
        container_name: web_blogging_platform-scheduler
        depends_on:
            - app
        volumes:
            - .:/var/www
        environment:
            CONTAINER_ROLE: scheduler
            CACHE_DRIVER: redis
            SESSION_DRIVER: redis
            QUEUE_DRIVER: redis
            REDIS_HOST: redis

    queue:
        image: digitalocean.com/php
        container_name: web_blogging_platform-queue
        depends_on:
            - app
        volumes:
            - .:/var/www
        environment:
            CONTAINER_ROLE: queue
            CACHE_DRIVER: redis
            SESSION_DRIVER: redis
            QUEUE_DRIVER: redis
            REDIS_HOST: redis


#Docker Networks
networks:
    app-network:
        driver: bridge
#Volumes
volumes:
    dbdata:
        driver: local
    redis:
        driver: local
